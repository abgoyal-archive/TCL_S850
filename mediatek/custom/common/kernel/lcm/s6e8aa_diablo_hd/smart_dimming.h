/**************************************************************************/
/*                                                            		    */
/*                            PRESENTATION                                */
/*              Copyright (c) 2012 JRD Communications, Inc.          	*/
/***************************************************************************/
/*                                                                        */
/*    This material is company confidential, cannot be reproduced in any   */
/*    form without the written permission of JRD Communications, Inc.      */
/*                                                                          */
/*---------------------------------------------------------------------------*/
/*   Author :    XIE Wei                                                   	*/
/*---------------------------------------------------------------------------*/
/*    Comments :    s6e8aa0-AMS465GS45 AMOLED Smart Dimmy  [Dibalo HD project]*/
/*    File      : */
/*    Labels   :                                                             */
/*=========================================================*/
/* Modifications on Features list / Changes Request / Problems Report    */                                                                                                           
/* date    | author           | Key                      | comment           */
/*---------|------------------|--------------------------|-------------------*/
/*2013/01/05 |
/*---------|------------------|--------------------------|-------------------*/
/*---------|------------------|--------------------------|-------------------*/
/*========================================================*/
#ifndef __SMART_DIMMING_H__
#define __SMART_DIMMING_H__
#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/errno.h>
#include <linux/slab.h> 
#include <linux/err.h>

//#define SMART_DIMMY_DEBUG

#define MAX_GRADATION		300
#define GAMMA_PARAM_SIZE	25
#define VALUE_DIM_1000		1000
#define VREG_OUT_1000		4600

enum {
	GAMMA_100CD,
	GAMMA_110CD,
	GAMMA_120CD,
	GAMMA_130CD,
	GAMMA_140CD,
	GAMMA_150CD,
	GAMMA_160CD,
	GAMMA_170CD,
	GAMMA_180CD,
	GAMMA_190CD,
	GAMMA_200CD,
	GAMMA_210CD,
	GAMMA_220CD,
	GAMMA_230CD,
	GAMMA_240CD,
	GAMMA_250CD,
	GAMMA_260CD,
	GAMMA_270CD,
	GAMMA_280CD,
	GAMMA_290CD,
	GAMMA_300CD,
	GAMMA_MAX
};

enum {
	CI_RED,
	CI_GREEN,
	CI_BLUE,
	CI_MAX,
};

enum {
	IV_1,
	IV_15,
	IV_35,
	IV_59,
	IV_87,
	IV_171,
	IV_255,
	IV_MAX,
	IV_TABLE_MAX,
};

enum {
	AD_IV0,
	AD_IV1,
	AD_IV15,
	AD_IV35,
	AD_IV59,
	AD_IV87,
	AD_IV171,
	AD_IV255,
	AD_IVMAX,
};

struct str_voltage_entry {
	u32 v[CI_MAX];
};

struct str_table_info {
	const u8 *offset_table;
	u32 rv;
};

struct str_flookup_table {
	u16 entry;
	u16 count;
};

struct str_smart_dim {
	s16 mtp[CI_MAX][IV_MAX];
	struct str_voltage_entry ve[256];
	const u8 *default_gamma;
	struct str_table_info t_info[IV_TABLE_MAX];
	const struct str_flookup_table *flooktbl;
	const u32 *g22_tbl;
	const u32 *g300_gra_tbl;
	u32 adjust_volt[CI_MAX][AD_IVMAX];
};

int init_gamma300cd_table(struct str_smart_dim *smart);
u8  calc_voltage_table(struct str_smart_dim *smart, const u8 *mtp);
u32 calc_gamma_table(struct str_smart_dim *smart, u32 gv, u8 result[]);

static const u32 gamma_300_gra_table[256] = {
0,	    2,	    7,	    17,
32,	    53,	    78,	    110,
148,	191,	241,	298,
361,	430,	506,	589,
679,	776,	880,	991,
1109,	1235,	1368,	1508,
1657,	1812,	1975,	2147,
2325,	2512,	2706,	2909,
3119,	3338,	3564,	3799,
4042,	4293,	4553,	4820,
5096,	5381,	5674,	5975,
6285,	6604,	6931,	7267,
7611,	7965,	8327,	8697,
9077,	9465,	9863,	10269,
10684,	11109,	11542,	11984,
12436,	12896,	13366,	13845,
14333,	14830,	15337,	15852,
16378,	16912,	17456,	18009,
18572,	19144,	19726,	20317,
20918,	21528,	22148,	22778,
23417,	24066,	24724,	25392,
26070,	26758,	27456,	28163,
28880,	29607,	30344,	31090,
31847,	32613,	33390,	34176,
34973,	35779,	36596,	37422,
38259,	39106,	39963,	40830,
41707,	42594,	43492,	44399,
45317,	46246,	47184,	48133,
49092,	50062,	51042,	52032,
53032,	54043,	55065,	56097,
57139,	58192,	59255,	60329,
61413,	62508,	63613,	64729,
65856,	66993,	68141,	69299,
70469,	71648,	72839,	74040,
75252,	76475,	77708,	78952,
80207,	81473,	82750,	84037,
85336,	86645,	87965,	89296,
90638,	91990,	93354,	94729,
96114,	97511,	98919,	100337,
101767,	103208,	104659,	106122,
107596,	109081,	110577,	112085,
113603,	115132,	116673,	118225,
119788,	121362,	122948,	124544,
126152,	127772,	129402,	131044,
132697,	134361,	136037,	137724,
139422,	141132,	142853,	144586,
146330,	148085,	149852,	151630,
153419,	155220,	157033,	158857,
160692,	162540,	164398,	166268,
168150,	170043,	171948,	173864,
175792,	177731,	179683,	181645,
183620,	185606,	187603,	189613,
191634,	193667,	195711,	197767,
199835,	201915,	204006,	206109,
208224,	210351,	212489,	214640,
216802,	218976,	221161,	223359,
225569,	227790,	230023,	232268,
234525,	236794,	239075,	241368,
243672,	245989,	248318,	250658,
253011,	255375,	257752,	260141,
262541,	264954,	267379,	269815,
272264,	274725,	277198,	279683,
282180,	284689,	287211,	289744,
292290,	294848,	297418,	300000,
};

static const struct str_flookup_table flookup_table[302] = {
{  0,   0},  {  1,  20},
{ 20,   7},  { 27,   5},
{ 32,   4},  { 36,   4},
{ 40,   4},  { 44,   3},
{ 47,   3},  { 50,   2},
{ 52,   3},  { 55,   2},
{ 57,   3},  { 60,   2},
{ 62,   2},  { 64,   2},
{ 66,   2},  { 68,   2},
{ 70,   2},  { 71,   2},
{ 73,   2},  { 75,   2},
{ 77,   2},  { 78,   2},
{ 80,   2},  { 81,   2},
{ 83,   2},  { 84,   2},
{ 86,   2},  { 87,   2},
{ 89,   2},  { 90,   2},
{ 91,   2},  { 93,   2},
{ 94,   2},  { 95,   2},
{ 97,   2},  { 98,   2},
{ 99,   2},  {100,   2},
{101,   2},  {103,   2},
{104,   2},  {105,   2},
{106,   2},  {107,   2},
{108,   2},  {109,   2},
{110,   2},  {111,   2},
{112,   2},  {113,   2},
{114,   2},  {115,   2},
{116,   2},  {117,   2},
{118,   2},  {119,   2},
{120,   2},  {121,   2},
{122,   2},  {123,   2},
{124,   2},  {125,   2},
{126,   2},  {127,   2},
{128,   2},  {129,   2},
{  0,   0},  {130,   2},
{131,   2},  {132,   2},
{133,   2},  {134,   2},
{  0,   0},  {135,   2},
{136,   2},  {137,   2},
{138,   2},  {139,   2},
{  0,   0},  {140,   2},
{141,   2},  {142,   2},
{  0,   0},  {143,   2},
{144,   2},  {145,   2},
{146,   2},  {  0,   0},
{147,   2},  {148,   2},
{149,   2},  {  0,   0},
{150,   2},  {151,   2},
{  0,   0},  {152,   2},
{153,   2},  {154,   2},
{  0,   0},  {155,   2},
{156,   2},  {  0,   0},
{157,   2},  {158,   2},
{  0,   0},  {159,   2},
{160,   2},  {  0,   0},
{161,   2},  {162,   2},
{  0,   0},  {163,   2},
{164,   2},  {  0,   0},
{165,   2},  {166,   2},
{  0,   0},  {167,   2},
{168,   2},  {  0,   0},
{169,   2},  {170,   1},
{  0,   0},  {171,   1},
{  0,   0},  {172,   1},
{173,   1},  {  0,   0},
{174,   1},  {  0,   0},
{175,   1},  {176,   1},
{  0,   0},  {177,   1},
{  0,   0},  {178,   1},
{179,   1},  {  0,   0},
{180,   1},  {  0,   0},
{181,   1},  {182,   1},
{  0,   0},  {183,   1},
{  0,   0},  {184,   1},
{  0,   0},  {185,   1},
{186,   1},  {  0,   0},
{187,   1},  {  0,   0},
{188,   1},  {  0,   0},
{189,   1},  {  0,   0},
{190,   1},  {191,   1},
{  0,   0},  {192,   1},
{  0,   0},  {193,   1},
{  0,   0},  {194,   1},
{  0,   0},  {195,   1},
{  0,   0},  {196,   1},
{  0,   0},  {197,   1},
{198,   1},  {  0,   0},
{199,   1},  {  0,   0},
{200,   1},  {  0,   0},
{201,   1},  {  0,   0},
{202,   1},  {  0,   0},
{203,   1},  {  0,   0},
{204,   1},  {  0,   0},
{205,   1},  {  0,   0},
{206,   1},  {  0,   0},
{207,   1},  {  0,   0},
{208,   1},  {  0,   0},
{209,   1},  {  0,   0},
{210,   1},  {  0,   0},
{211,   1},  {  0,   0},
{212,   1},  {  0,   0},
{213,   1},  {  0,   0},
{  0,   0},  {214,   1},
{  0,   0},  {215,   1},
{  0,   0},  {216,   1},
{  0,   0},  {217,   1},
{  0,   0},  {218,   1},
{  0,   0},  {219,   1},
{  0,   0},  {220,   1},
{  0,   0},  {221,   1},
{  0,   0},  {  0,   0},
{222,   1},  {  0,   0},
{223,   1},  {  0,   0},
{224,   1},  {  0,   0},
{225,   1},  {  0,   0},
{  0,   0},  {226,   1},
{  0,   0},  {227,   1},
{  0,   0},  {228,   1},
{  0,   0},  {229,   1},
{  0,   0},  {  0,   0},
{230,   1},  {  0,   0},
{231,   1},  {  0,   0},
{232,   1},  {  0,   0},
{233,   1},  {  0,   0},
{  0,   0},  {234,   1},
{  0,   0},  {235,   1},
{  0,   0},  {  0,   0},
{236,   1},  {  0,   0},
{237,   1},  {  0,   0},
{238,   1},  {  0,   0},
{  0,   0},  {239,   1},
{  0,   0},  {240,   1},
{  0,   0},  {241,   1},
{  0,   0},  {  0,   0},
{242,   1},  {  0,   0},
{243,   1},  {  0,   0},
{  0,   0},  {244,   1},
{  0,   0},  {245,   1},
{  0,   0},  {  0,   0},
{246,   1},  {  0,   0},
{247,   1},  {  0,   0},
{  0,   0},  {248,   1},
{  0,   0},  {249,   1},
{  0,   0},  {  0,   0},
{250,   1},  {  0,   0},
{251,   1},  {  0,   0},
{  0,   0},  {252,   1},
{  0,   0},  {253,   1},
{  0,   0},  {  0,   0},
{254,   1},  {  0,   0},
{  0,   0},  {255,   1},
};

static const u32 gamma_22_table[256] = {
	0, 2, 13, 40, 94, 415, 1000,
};

static const u8 v1_offset_table[14] = {
	47, 42, 37, 32, 27, 23, 19, 15,
	12,  9,  6,  4, 2,  0
};

static const u8 v15_offset_table[20] = {
	66, 62, 58, 54, 50, 46, 43, 38,
	34, 30, 27, 24, 21, 18, 15, 12,
	9,  6,  3, 0,
};

static const u8 range_table_count[IV_TABLE_MAX] = {
	1, 14, 20, 24, 28, 84, 84, 1
};

static const u32 table_radio[IV_TABLE_MAX] = {
	0, 630, 468, 1365, 1170, 390, 390, 0
};

static const char color_name[3] = {'R', 'G', 'B'};

static const u8 *offset_table[IV_TABLE_MAX] = {
	NULL,
	v1_offset_table,
	v15_offset_table,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL
};

static const unsigned char gamma_300cd[24] = {
	0x52,0x24,0x5D,
	0xBA,0xCD,0xB3,
	0xAD,0xC0,0xB1,
	0xBF,0xC7,0xBC,
	0x90,0x97,0x8A,
	0xAA,0xAE,0xA5,
	0x00,0xC2,0x00,
	0xA8,0x00,0xD7
};

#endif
